/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/ogb/nodeproppred/dataset_pyg.py:69: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  self.data, self.slices = torch.load(self.processed_paths[0])
True
look just above
everything is loaded
Namespace(device=0, log_steps=1, num_layers=2, hidden_channels=64, dropout=0.5, lr=0.01, epochs=10, runs=10, save_model=False)
Data(
  num_nodes_dict={
    author=1134649,
    field_of_study=59965,
    institution=8740,
    paper=736389,
  },
  edge_index_dict={
    (author, affiliated_with, institution)=[2, 1043998],
    (author, writes, paper)=[2, 7145660],
    (paper, cites, paper)=[2, 5416271],
    (paper, has_topic, field_of_study)=[2, 7505078],
  },
  x_dict={ paper=[736389, 128] },
  node_year={ paper=[736389, 1] },
  edge_reltype={
    (author, affiliated_with, institution)=[1043998, 1],
    (author, writes, paper)=[7145660, 1],
    (paper, cites, paper)=[5416271, 1],
    (paper, has_topic, field_of_study)=[7505078, 1],
  },
  y_dict={ paper=[736389, 1] }
)
Traceback (most recent call last):
  File "/zhome/45/0/155089/deeplearning/Deep-Learning-Project/rgcn.py", line 226, in <module>
    main()
  File "/zhome/45/0/155089/deeplearning/Deep-Learning-Project/rgcn.py", line 199, in main
    loss = train(model, data.x_dict, data.adj_t_dict,
  File "/zhome/45/0/155089/deeplearning/Deep-Learning-Project/rgcn.py", line 107, in train
    out = model(x_dict, adj_t_dict)['paper'].log_softmax(dim=-1)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/45/0/155089/deeplearning/Deep-Learning-Project/rgcn.py", line 95, in forward
    x_dict = conv(x_dict, adj_t_dict)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/zhome/45/0/155089/deeplearning/Deep-Learning-Project/rgcn.py", line 51, in forward
    out = self.rel_lins[key_str](adj_t.matmul(x, reduce='mean'))
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/matmul.py", line 169, in <lambda>
    SparseTensor.matmul = lambda self, other, reduce="sum": matmul(
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/matmul.py", line 160, in matmul
    return spmm(src, other, reduce)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/matmul.py", line 85, in spmm
    return spmm_mean(src, other)
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/matmul.py", line 36, in spmm_mean
    rowptr, col, value = src.csr()
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/tensor.py", line 237, in csr
    return self.storage.rowptr(), self.storage.col(), self.storage.value()
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch_sparse/storage.py", line 209, in rowptr
    rowptr = torch.ops.torch_sparse.ind2ptr(row, self._sparse_sizes[0])
  File "/zhome/45/0/155089/deeplearning/venv/lib64/python3.9/site-packages/torch/_ops.py", line 1116, in __call__
    return self._op(*args, **(kwargs or {}))
RuntimeError: Not compiled with CUDA support
